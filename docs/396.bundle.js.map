{"version":3,"file":"396.bundle.js","sources":["webpack://graph-diagram/./node_modules/.pnpm/monaco-editor@0.52.2/node_modules/monaco-editor/esm/vs/base/common/buffer.js","webpack://graph-diagram/./node_modules/.pnpm/monaco-editor@0.52.2/node_modules/monaco-editor/esm/vs/editor/common/services/semanticTokensDto.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Lazy } from './lazy.js';\nconst hasBuffer = (typeof Buffer !== 'undefined');\nconst indexOfTable = new Lazy(() => new Uint8Array(256));\nlet textDecoder;\nexport class VSBuffer {\n    /**\n     * When running in a nodejs context, if `actual` is not a nodejs Buffer, the backing store for\n     * the returned `VSBuffer` instance might use a nodejs Buffer allocated from node's Buffer pool,\n     * which is not transferrable.\n     */\n    static wrap(actual) {\n        if (hasBuffer && !(Buffer.isBuffer(actual))) {\n            // https://nodejs.org/dist/latest-v10.x/docs/api/buffer.html#buffer_class_method_buffer_from_arraybuffer_byteoffset_length\n            // Create a zero-copy Buffer wrapper around the ArrayBuffer pointed to by the Uint8Array\n            actual = Buffer.from(actual.buffer, actual.byteOffset, actual.byteLength);\n        }\n        return new VSBuffer(actual);\n    }\n    constructor(buffer) {\n        this.buffer = buffer;\n        this.byteLength = this.buffer.byteLength;\n    }\n    toString() {\n        if (hasBuffer) {\n            return this.buffer.toString();\n        }\n        else {\n            if (!textDecoder) {\n                textDecoder = new TextDecoder();\n            }\n            return textDecoder.decode(this.buffer);\n        }\n    }\n}\nexport function readUInt16LE(source, offset) {\n    return (((source[offset + 0] << 0) >>> 0) |\n        ((source[offset + 1] << 8) >>> 0));\n}\nexport function writeUInt16LE(destination, value, offset) {\n    destination[offset + 0] = (value & 0b11111111);\n    value = value >>> 8;\n    destination[offset + 1] = (value & 0b11111111);\n}\nexport function readUInt32BE(source, offset) {\n    return (source[offset] * 2 ** 24\n        + source[offset + 1] * 2 ** 16\n        + source[offset + 2] * 2 ** 8\n        + source[offset + 3]);\n}\nexport function writeUInt32BE(destination, value, offset) {\n    destination[offset + 3] = value;\n    value = value >>> 8;\n    destination[offset + 2] = value;\n    value = value >>> 8;\n    destination[offset + 1] = value;\n    value = value >>> 8;\n    destination[offset] = value;\n}\nexport function readUInt8(source, offset) {\n    return source[offset];\n}\nexport function writeUInt8(destination, value, offset) {\n    destination[offset] = value;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { VSBuffer } from '../../../base/common/buffer.js';\nimport * as platform from '../../../base/common/platform.js';\nfunction reverseEndianness(arr) {\n    for (let i = 0, len = arr.length; i < len; i += 4) {\n        // flip bytes 0<->3 and 1<->2\n        const b0 = arr[i + 0];\n        const b1 = arr[i + 1];\n        const b2 = arr[i + 2];\n        const b3 = arr[i + 3];\n        arr[i + 0] = b3;\n        arr[i + 1] = b2;\n        arr[i + 2] = b1;\n        arr[i + 3] = b0;\n    }\n}\nfunction toLittleEndianBuffer(arr) {\n    const uint8Arr = new Uint8Array(arr.buffer, arr.byteOffset, arr.length * 4);\n    if (!platform.isLittleEndian()) {\n        // the byte order must be changed\n        reverseEndianness(uint8Arr);\n    }\n    return VSBuffer.wrap(uint8Arr);\n}\nexport function encodeSemanticTokensDto(semanticTokens) {\n    const dest = new Uint32Array(encodeSemanticTokensDtoSize(semanticTokens));\n    let offset = 0;\n    dest[offset++] = semanticTokens.id;\n    if (semanticTokens.type === 'full') {\n        dest[offset++] = 1 /* EncodedSemanticTokensType.Full */;\n        dest[offset++] = semanticTokens.data.length;\n        dest.set(semanticTokens.data, offset);\n        offset += semanticTokens.data.length;\n    }\n    else {\n        dest[offset++] = 2 /* EncodedSemanticTokensType.Delta */;\n        dest[offset++] = semanticTokens.deltas.length;\n        for (const delta of semanticTokens.deltas) {\n            dest[offset++] = delta.start;\n            dest[offset++] = delta.deleteCount;\n            if (delta.data) {\n                dest[offset++] = delta.data.length;\n                dest.set(delta.data, offset);\n                offset += delta.data.length;\n            }\n            else {\n                dest[offset++] = 0;\n            }\n        }\n    }\n    return toLittleEndianBuffer(dest);\n}\nfunction encodeSemanticTokensDtoSize(semanticTokens) {\n    let result = 0;\n    result += (+1 // id\n        + 1 // type\n    );\n    if (semanticTokens.type === 'full') {\n        result += (+1 // data length\n            + semanticTokens.data.length);\n    }\n    else {\n        result += (+1 // delta count\n        );\n        result += (+1 // start\n            + 1 // deleteCount\n            + 1 // data length\n        ) * semanticTokens.deltas.length;\n        for (const delta of semanticTokens.deltas) {\n            if (delta.data) {\n                result += delta.data.length;\n            }\n        }\n    }\n    return result;\n}\n"],"names":["Buffer","Uint8Array","TextDecoder","Uint32Array"],"mappings":"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"}