{"version":3,"file":"6969.bundle.js","sources":["webpack://graph-diagram/./node_modules/.pnpm/monaco-editor@0.52.2/node_modules/monaco-editor/esm/vs/base/common/equals.js","webpack://graph-diagram/./node_modules/.pnpm/monaco-editor@0.52.2/node_modules/monaco-editor/esm/vs/base/common/observableInternal/autorun.js","webpack://graph-diagram/./node_modules/.pnpm/monaco-editor@0.52.2/node_modules/monaco-editor/esm/vs/base/common/observableInternal/promise.js","webpack://graph-diagram/./node_modules/.pnpm/monaco-editor@0.52.2/node_modules/monaco-editor/esm/vs/base/common/observableInternal/lazyObservableValue.js","webpack://graph-diagram/./node_modules/.pnpm/monaco-editor@0.52.2/node_modules/monaco-editor/esm/vs/base/common/observableInternal/api.js","webpack://graph-diagram/./node_modules/.pnpm/monaco-editor@0.52.2/node_modules/monaco-editor/esm/vs/base/common/observableInternal/base.js","webpack://graph-diagram/./node_modules/.pnpm/monaco-editor@0.52.2/node_modules/monaco-editor/esm/vs/base/common/observableInternal/debugName.js","webpack://graph-diagram/./node_modules/.pnpm/monaco-editor@0.52.2/node_modules/monaco-editor/esm/vs/base/common/observableInternal/derived.js","webpack://graph-diagram/./node_modules/.pnpm/monaco-editor@0.52.2/node_modules/monaco-editor/esm/vs/base/common/observableInternal/logging.js","webpack://graph-diagram/./node_modules/.pnpm/monaco-editor@0.52.2/node_modules/monaco-editor/esm/vs/base/common/observableInternal/utils.js","webpack://graph-diagram/./node_modules/.pnpm/monaco-editor@0.52.2/node_modules/monaco-editor/esm/vs/editor/common/services/languageService.js","webpack://graph-diagram/./node_modules/.pnpm/monaco-editor@0.52.2/node_modules/monaco-editor/esm/vs/editor/common/services/languagesAssociations.js","webpack://graph-diagram/./node_modules/.pnpm/monaco-editor@0.52.2/node_modules/monaco-editor/esm/vs/editor/common/services/languagesRegistry.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as arrays from './arrays.js';\n/**\n * Compares two items for equality using strict equality.\n*/\nexport const strictEquals = (a, b) => a === b;\n/**\n * Checks if the items of two arrays are equal.\n * By default, strict equality is used to compare elements, but a custom equality comparer can be provided.\n */\nexport function itemsEquals(itemEquals = strictEquals) {\n    return (a, b) => arrays.equals(a, b, itemEquals);\n}\n/**\n * Uses `item.equals(other)` to determine equality.\n */\nexport function itemEquals() {\n    return (a, b) => a.equals(b);\n}\nexport function equalsIfDefined(equalsOrV1, v2, equals) {\n    if (equals !== undefined) {\n        const v1 = equalsOrV1;\n        if (v1 === undefined || v1 === null || v2 === undefined || v2 === null) {\n            return v2 === v1;\n        }\n        return equals(v1, v2);\n    }\n    else {\n        const equals = equalsOrV1;\n        return (v1, v2) => {\n            if (v1 === undefined || v1 === null || v2 === undefined || v2 === null) {\n                return v2 === v1;\n            }\n            return equals(v1, v2);\n        };\n    }\n}\n/**\n * Drills into arrays (items ordered) and objects (keys unordered) and uses strict equality on everything else.\n*/\nexport function structuralEquals(a, b) {\n    if (a === b) {\n        return true;\n    }\n    if (Array.isArray(a) && Array.isArray(b)) {\n        if (a.length !== b.length) {\n            return false;\n        }\n        for (let i = 0; i < a.length; i++) {\n            if (!structuralEquals(a[i], b[i])) {\n                return false;\n            }\n        }\n        return true;\n    }\n    if (a && typeof a === 'object' && b && typeof b === 'object') {\n        if (Object.getPrototypeOf(a) === Object.prototype && Object.getPrototypeOf(b) === Object.prototype) {\n            const aObj = a;\n            const bObj = b;\n            const keysA = Object.keys(aObj);\n            const keysB = Object.keys(bObj);\n            const keysBSet = new Set(keysB);\n            if (keysA.length !== keysB.length) {\n                return false;\n            }\n            for (const key of keysA) {\n                if (!keysBSet.has(key)) {\n                    return false;\n                }\n                if (!structuralEquals(aObj[key], bObj[key])) {\n                    return false;\n                }\n            }\n            return true;\n        }\n    }\n    return false;\n}\nconst objIds = new WeakMap();\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { assertFn } from '../assert.js';\nimport { DisposableStore, markAsDisposed, toDisposable, trackDisposable } from '../lifecycle.js';\nimport { DebugNameData } from './debugName.js';\nimport { getLogger } from './logging.js';\n/**\n * Runs immediately and whenever a transaction ends and an observed observable changed.\n * {@link fn} should start with a JS Doc using `@description` to name the autorun.\n */\nexport function autorun(fn) {\n    return new AutorunObserver(new DebugNameData(undefined, undefined, fn), fn, undefined, undefined);\n}\n/**\n * Runs immediately and whenever a transaction ends and an observed observable changed.\n * {@link fn} should start with a JS Doc using `@description` to name the autorun.\n */\nexport function autorunOpts(options, fn) {\n    return new AutorunObserver(new DebugNameData(options.owner, options.debugName, options.debugReferenceFn ?? fn), fn, undefined, undefined);\n}\n/**\n * Runs immediately and whenever a transaction ends and an observed observable changed.\n * {@link fn} should start with a JS Doc using `@description` to name the autorun.\n *\n * Use `createEmptyChangeSummary` to create a \"change summary\" that can collect the changes.\n * Use `handleChange` to add a reported change to the change summary.\n * The run function is given the last change summary.\n * The change summary is discarded after the run function was called.\n *\n * @see autorun\n */\nexport function autorunHandleChanges(options, fn) {\n    return new AutorunObserver(new DebugNameData(options.owner, options.debugName, options.debugReferenceFn ?? fn), fn, options.createEmptyChangeSummary, options.handleChange);\n}\n/**\n * @see autorunHandleChanges (but with a disposable store that is cleared before the next run or on dispose)\n */\nexport function autorunWithStoreHandleChanges(options, fn) {\n    const store = new DisposableStore();\n    const disposable = autorunHandleChanges({\n        owner: options.owner,\n        debugName: options.debugName,\n        debugReferenceFn: options.debugReferenceFn ?? fn,\n        createEmptyChangeSummary: options.createEmptyChangeSummary,\n        handleChange: options.handleChange,\n    }, (reader, changeSummary) => {\n        store.clear();\n        fn(reader, changeSummary, store);\n    });\n    return toDisposable(() => {\n        disposable.dispose();\n        store.dispose();\n    });\n}\n/**\n * @see autorun (but with a disposable store that is cleared before the next run or on dispose)\n */\nexport function autorunWithStore(fn) {\n    const store = new DisposableStore();\n    const disposable = autorunOpts({\n        owner: undefined,\n        debugName: undefined,\n        debugReferenceFn: fn,\n    }, reader => {\n        store.clear();\n        fn(reader, store);\n    });\n    return toDisposable(() => {\n        disposable.dispose();\n        store.dispose();\n    });\n}\nexport class AutorunObserver {\n    get debugName() {\n        return this._debugNameData.getDebugName(this) ?? '(anonymous)';\n    }\n    constructor(_debugNameData, _runFn, createChangeSummary, _handleChange) {\n        this._debugNameData = _debugNameData;\n        this._runFn = _runFn;\n        this.createChangeSummary = createChangeSummary;\n        this._handleChange = _handleChange;\n        this.state = 2 /* AutorunState.stale */;\n        this.updateCount = 0;\n        this.disposed = false;\n        this.dependencies = new Set();\n        this.dependenciesToBeRemoved = new Set();\n        this.changeSummary = this.createChangeSummary?.();\n        getLogger()?.handleAutorunCreated(this);\n        this._runIfNeeded();\n        trackDisposable(this);\n    }\n    dispose() {\n        this.disposed = true;\n        for (const o of this.dependencies) {\n            o.removeObserver(this);\n        }\n        this.dependencies.clear();\n        markAsDisposed(this);\n    }\n    _runIfNeeded() {\n        if (this.state === 3 /* AutorunState.upToDate */) {\n            return;\n        }\n        const emptySet = this.dependenciesToBeRemoved;\n        this.dependenciesToBeRemoved = this.dependencies;\n        this.dependencies = emptySet;\n        this.state = 3 /* AutorunState.upToDate */;\n        const isDisposed = this.disposed;\n        try {\n            if (!isDisposed) {\n                getLogger()?.handleAutorunTriggered(this);\n                const changeSummary = this.changeSummary;\n                this.changeSummary = this.createChangeSummary?.();\n                this._runFn(this, changeSummary);\n            }\n        }\n        finally {\n            if (!isDisposed) {\n                getLogger()?.handleAutorunFinished(this);\n            }\n            // We don't want our observed observables to think that they are (not even temporarily) not being observed.\n            // Thus, we only unsubscribe from observables that are definitely not read anymore.\n            for (const o of this.dependenciesToBeRemoved) {\n                o.removeObserver(this);\n            }\n            this.dependenciesToBeRemoved.clear();\n        }\n    }\n    toString() {\n        return `Autorun<${this.debugName}>`;\n    }\n    // IObserver implementation\n    beginUpdate() {\n        if (this.state === 3 /* AutorunState.upToDate */) {\n            this.state = 1 /* AutorunState.dependenciesMightHaveChanged */;\n        }\n        this.updateCount++;\n    }\n    endUpdate() {\n        if (this.updateCount === 1) {\n            do {\n                if (this.state === 1 /* AutorunState.dependenciesMightHaveChanged */) {\n                    this.state = 3 /* AutorunState.upToDate */;\n                    for (const d of this.dependencies) {\n                        d.reportChanges();\n                        if (this.state === 2 /* AutorunState.stale */) {\n                            // The other dependencies will refresh on demand\n                            break;\n                        }\n                    }\n                }\n                this._runIfNeeded();\n            } while (this.state !== 3 /* AutorunState.upToDate */);\n        }\n        this.updateCount--;\n        assertFn(() => this.updateCount >= 0);\n    }\n    handlePossibleChange(observable) {\n        if (this.state === 3 /* AutorunState.upToDate */ && this.dependencies.has(observable) && !this.dependenciesToBeRemoved.has(observable)) {\n            this.state = 1 /* AutorunState.dependenciesMightHaveChanged */;\n        }\n    }\n    handleChange(observable, change) {\n        if (this.dependencies.has(observable) && !this.dependenciesToBeRemoved.has(observable)) {\n            const shouldReact = this._handleChange ? this._handleChange({\n                changedObservable: observable,\n                change,\n                didChange: (o) => o === observable,\n            }, this.changeSummary) : true;\n            if (shouldReact) {\n                this.state = 2 /* AutorunState.stale */;\n            }\n        }\n    }\n    // IReader implementation\n    readObservable(observable) {\n        // In case the run action disposes the autorun\n        if (this.disposed) {\n            return observable.get();\n        }\n        observable.addObserver(this);\n        const value = observable.get();\n        this.dependencies.add(observable);\n        this.dependenciesToBeRemoved.delete(observable);\n        return value;\n    }\n}\n(function (autorun) {\n    autorun.Observer = AutorunObserver;\n})(autorun || (autorun = {}));\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { autorun } from './autorun.js';\nimport { observableValue, transaction } from './base.js';\nimport { CancellationError } from '../errors.js';\n/**\n * A promise whose state is observable.\n */\nexport class ObservablePromise {\n    static fromFn(fn) {\n        return new ObservablePromise(fn());\n    }\n    constructor(promise) {\n        this._value = observableValue(this, undefined);\n        /**\n         * The current state of the promise.\n         * Is `undefined` if the promise didn't resolve yet.\n         */\n        this.promiseResult = this._value;\n        this.promise = promise.then(value => {\n            transaction(tx => {\n                /** @description onPromiseResolved */\n                this._value.set(new PromiseResult(value, undefined), tx);\n            });\n            return value;\n        }, error => {\n            transaction(tx => {\n                /** @description onPromiseRejected */\n                this._value.set(new PromiseResult(undefined, error), tx);\n            });\n            throw error;\n        });\n    }\n}\nexport class PromiseResult {\n    constructor(\n    /**\n     * The value of the resolved promise.\n     * Undefined if the promise rejected.\n     */\n    data, \n    /**\n     * The error in case of a rejected promise.\n     * Undefined if the promise resolved.\n     */\n    error) {\n        this.data = data;\n        this.error = error;\n    }\n}\nexport function waitForState(observable, predicate, isError, cancellationToken) {\n    if (!predicate) {\n        predicate = state => state !== null && state !== undefined;\n    }\n    return new Promise((resolve, reject) => {\n        let isImmediateRun = true;\n        let shouldDispose = false;\n        const stateObs = observable.map(state => {\n            /** @description waitForState.state */\n            return {\n                isFinished: predicate(state),\n                error: isError ? isError(state) : false,\n                state\n            };\n        });\n        const d = autorun(reader => {\n            /** @description waitForState */\n            const { isFinished, error, state } = stateObs.read(reader);\n            if (isFinished || error) {\n                if (isImmediateRun) {\n                    // The variable `d` is not initialized yet\n                    shouldDispose = true;\n                }\n                else {\n                    d.dispose();\n                }\n                if (error) {\n                    reject(error === true ? state : error);\n                }\n                else {\n                    resolve(state);\n                }\n            }\n        });\n        if (cancellationToken) {\n            const dc = cancellationToken.onCancellationRequested(() => {\n                d.dispose();\n                dc.dispose();\n                reject(new CancellationError());\n            });\n            if (cancellationToken.isCancellationRequested) {\n                d.dispose();\n                dc.dispose();\n                reject(new CancellationError());\n                return;\n            }\n        }\n        isImmediateRun = false;\n        if (shouldDispose) {\n            d.dispose();\n        }\n    });\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { BaseObservable, TransactionImpl } from './base.js';\n/**\n * Holds off updating observers until the value is actually read.\n*/\nexport class LazyObservableValue extends BaseObservable {\n    get debugName() {\n        return this._debugNameData.getDebugName(this) ?? 'LazyObservableValue';\n    }\n    constructor(_debugNameData, initialValue, _equalityComparator) {\n        super();\n        this._debugNameData = _debugNameData;\n        this._equalityComparator = _equalityComparator;\n        this._isUpToDate = true;\n        this._deltas = [];\n        this._updateCounter = 0;\n        this._value = initialValue;\n    }\n    get() {\n        this._update();\n        return this._value;\n    }\n    _update() {\n        if (this._isUpToDate) {\n            return;\n        }\n        this._isUpToDate = true;\n        if (this._deltas.length > 0) {\n            for (const observer of this.observers) {\n                for (const change of this._deltas) {\n                    observer.handleChange(this, change);\n                }\n            }\n            this._deltas.length = 0;\n        }\n        else {\n            for (const observer of this.observers) {\n                observer.handleChange(this, undefined);\n            }\n        }\n    }\n    _beginUpdate() {\n        this._updateCounter++;\n        if (this._updateCounter === 1) {\n            for (const observer of this.observers) {\n                observer.beginUpdate(this);\n            }\n        }\n    }\n    _endUpdate() {\n        this._updateCounter--;\n        if (this._updateCounter === 0) {\n            this._update();\n            // End update could change the observer list.\n            const observers = [...this.observers];\n            for (const r of observers) {\n                r.endUpdate(this);\n            }\n        }\n    }\n    addObserver(observer) {\n        const shouldCallBeginUpdate = !this.observers.has(observer) && this._updateCounter > 0;\n        super.addObserver(observer);\n        if (shouldCallBeginUpdate) {\n            observer.beginUpdate(this);\n        }\n    }\n    removeObserver(observer) {\n        const shouldCallEndUpdate = this.observers.has(observer) && this._updateCounter > 0;\n        super.removeObserver(observer);\n        if (shouldCallEndUpdate) {\n            // Calling end update after removing the observer makes sure endUpdate cannot be called twice here.\n            observer.endUpdate(this);\n        }\n    }\n    set(value, tx, change) {\n        if (change === undefined && this._equalityComparator(this._value, value)) {\n            return;\n        }\n        let _tx;\n        if (!tx) {\n            tx = _tx = new TransactionImpl(() => { }, () => `Setting ${this.debugName}`);\n        }\n        try {\n            this._isUpToDate = false;\n            this._setValue(value);\n            if (change !== undefined) {\n                this._deltas.push(change);\n            }\n            tx.updateObserver({\n                beginUpdate: () => this._beginUpdate(),\n                endUpdate: () => this._endUpdate(),\n                handleChange: (observable, change) => { },\n                handlePossibleChange: (observable) => { },\n            }, this);\n            if (this._updateCounter > 1) {\n                // We already started begin/end update, so we need to manually call handlePossibleChange\n                for (const observer of this.observers) {\n                    observer.handlePossibleChange(this);\n                }\n            }\n        }\n        finally {\n            if (_tx) {\n                _tx.finish();\n            }\n        }\n    }\n    toString() {\n        return `${this.debugName}: ${this._value}`;\n    }\n    _setValue(newValue) {\n        this._value = newValue;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { strictEquals } from '../equals.js';\nimport { ObservableValue } from './base.js';\nimport { DebugNameData } from './debugName.js';\nimport { LazyObservableValue } from './lazyObservableValue.js';\nexport function observableValueOpts(options, initialValue) {\n    if (options.lazy) {\n        return new LazyObservableValue(new DebugNameData(options.owner, options.debugName, undefined), initialValue, options.equalsFn ?? strictEquals);\n    }\n    return new ObservableValue(new DebugNameData(options.owner, options.debugName, undefined), initialValue, options.equalsFn ?? strictEquals);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { strictEquals } from '../equals.js';\nimport { DebugNameData, getFunctionName } from './debugName.js';\nimport { getLogger } from './logging.js';\nlet _recomputeInitiallyAndOnChange;\nexport function _setRecomputeInitiallyAndOnChange(recomputeInitiallyAndOnChange) {\n    _recomputeInitiallyAndOnChange = recomputeInitiallyAndOnChange;\n}\nlet _keepObserved;\nexport function _setKeepObserved(keepObserved) {\n    _keepObserved = keepObserved;\n}\nlet _derived;\n/**\n * @internal\n * This is to allow splitting files.\n*/\nexport function _setDerivedOpts(derived) {\n    _derived = derived;\n}\nexport class ConvenientObservable {\n    get TChange() { return null; }\n    reportChanges() {\n        this.get();\n    }\n    /** @sealed */\n    read(reader) {\n        if (reader) {\n            return reader.readObservable(this);\n        }\n        else {\n            return this.get();\n        }\n    }\n    map(fnOrOwner, fnOrUndefined) {\n        const owner = fnOrUndefined === undefined ? undefined : fnOrOwner;\n        const fn = fnOrUndefined === undefined ? fnOrOwner : fnOrUndefined;\n        return _derived({\n            owner,\n            debugName: () => {\n                const name = getFunctionName(fn);\n                if (name !== undefined) {\n                    return name;\n                }\n                // regexp to match `x => x.y` or `x => x?.y` where x and y can be arbitrary identifiers (uses backref):\n                const regexp = /^\\s*\\(?\\s*([a-zA-Z_$][a-zA-Z_$0-9]*)\\s*\\)?\\s*=>\\s*\\1(?:\\??)\\.([a-zA-Z_$][a-zA-Z_$0-9]*)\\s*$/;\n                const match = regexp.exec(fn.toString());\n                if (match) {\n                    return `${this.debugName}.${match[2]}`;\n                }\n                if (!owner) {\n                    return `${this.debugName} (mapped)`;\n                }\n                return undefined;\n            },\n            debugReferenceFn: fn,\n        }, (reader) => fn(this.read(reader), reader));\n    }\n    /**\n     * @sealed\n     * Converts an observable of an observable value into a direct observable of the value.\n    */\n    flatten() {\n        return _derived({\n            owner: undefined,\n            debugName: () => `${this.debugName} (flattened)`,\n        }, (reader) => this.read(reader).read(reader));\n    }\n    recomputeInitiallyAndOnChange(store, handleValue) {\n        store.add(_recomputeInitiallyAndOnChange(this, handleValue));\n        return this;\n    }\n    /**\n     * Ensures that this observable is observed. This keeps the cache alive.\n     * However, in case of deriveds, it does not force eager evaluation (only when the value is read/get).\n     * Use `recomputeInitiallyAndOnChange` for eager evaluation.\n     */\n    keepObserved(store) {\n        store.add(_keepObserved(this));\n        return this;\n    }\n}\nexport class BaseObservable extends ConvenientObservable {\n    constructor() {\n        super(...arguments);\n        this.observers = new Set();\n    }\n    addObserver(observer) {\n        const len = this.observers.size;\n        this.observers.add(observer);\n        if (len === 0) {\n            this.onFirstObserverAdded();\n        }\n    }\n    removeObserver(observer) {\n        const deleted = this.observers.delete(observer);\n        if (deleted && this.observers.size === 0) {\n            this.onLastObserverRemoved();\n        }\n    }\n    onFirstObserverAdded() { }\n    onLastObserverRemoved() { }\n}\n/**\n * Starts a transaction in which many observables can be changed at once.\n * {@link fn} should start with a JS Doc using `@description` to give the transaction a debug name.\n * Reaction run on demand or when the transaction ends.\n */\nexport function transaction(fn, getDebugName) {\n    const tx = new TransactionImpl(fn, getDebugName);\n    try {\n        fn(tx);\n    }\n    finally {\n        tx.finish();\n    }\n}\nlet _globalTransaction = undefined;\nexport function globalTransaction(fn) {\n    if (_globalTransaction) {\n        fn(_globalTransaction);\n    }\n    else {\n        const tx = new TransactionImpl(fn, undefined);\n        _globalTransaction = tx;\n        try {\n            fn(tx);\n        }\n        finally {\n            tx.finish(); // During finish, more actions might be added to the transaction.\n            // Which is why we only clear the global transaction after finish.\n            _globalTransaction = undefined;\n        }\n    }\n}\nexport async function asyncTransaction(fn, getDebugName) {\n    const tx = new TransactionImpl(fn, getDebugName);\n    try {\n        await fn(tx);\n    }\n    finally {\n        tx.finish();\n    }\n}\n/**\n * Allows to chain transactions.\n */\nexport function subtransaction(tx, fn, getDebugName) {\n    if (!tx) {\n        transaction(fn, getDebugName);\n    }\n    else {\n        fn(tx);\n    }\n}\nexport class TransactionImpl {\n    constructor(_fn, _getDebugName) {\n        this._fn = _fn;\n        this._getDebugName = _getDebugName;\n        this.updatingObservers = [];\n        getLogger()?.handleBeginTransaction(this);\n    }\n    getDebugName() {\n        if (this._getDebugName) {\n            return this._getDebugName();\n        }\n        return getFunctionName(this._fn);\n    }\n    updateObserver(observer, observable) {\n        // When this gets called while finish is active, they will still get considered\n        this.updatingObservers.push({ observer, observable });\n        observer.beginUpdate(observable);\n    }\n    finish() {\n        const updatingObservers = this.updatingObservers;\n        for (let i = 0; i < updatingObservers.length; i++) {\n            const { observer, observable } = updatingObservers[i];\n            observer.endUpdate(observable);\n        }\n        // Prevent anyone from updating observers from now on.\n        this.updatingObservers = null;\n        getLogger()?.handleEndTransaction();\n    }\n}\nexport function observableValue(nameOrOwner, initialValue) {\n    let debugNameData;\n    if (typeof nameOrOwner === 'string') {\n        debugNameData = new DebugNameData(undefined, nameOrOwner, undefined);\n    }\n    else {\n        debugNameData = new DebugNameData(nameOrOwner, undefined, undefined);\n    }\n    return new ObservableValue(debugNameData, initialValue, strictEquals);\n}\nexport class ObservableValue extends BaseObservable {\n    get debugName() {\n        return this._debugNameData.getDebugName(this) ?? 'ObservableValue';\n    }\n    constructor(_debugNameData, initialValue, _equalityComparator) {\n        super();\n        this._debugNameData = _debugNameData;\n        this._equalityComparator = _equalityComparator;\n        this._value = initialValue;\n    }\n    get() {\n        return this._value;\n    }\n    set(value, tx, change) {\n        if (change === undefined && this._equalityComparator(this._value, value)) {\n            return;\n        }\n        let _tx;\n        if (!tx) {\n            tx = _tx = new TransactionImpl(() => { }, () => `Setting ${this.debugName}`);\n        }\n        try {\n            const oldValue = this._value;\n            this._setValue(value);\n            getLogger()?.handleObservableChanged(this, { oldValue, newValue: value, change, didChange: true, hadValue: true });\n            for (const observer of this.observers) {\n                tx.updateObserver(observer, this);\n                observer.handleChange(this, change);\n            }\n        }\n        finally {\n            if (_tx) {\n                _tx.finish();\n            }\n        }\n    }\n    toString() {\n        return `${this.debugName}: ${this._value}`;\n    }\n    _setValue(newValue) {\n        this._value = newValue;\n    }\n}\n/**\n * A disposable observable. When disposed, its value is also disposed.\n * When a new value is set, the previous value is disposed.\n */\nexport function disposableObservableValue(nameOrOwner, initialValue) {\n    let debugNameData;\n    if (typeof nameOrOwner === 'string') {\n        debugNameData = new DebugNameData(undefined, nameOrOwner, undefined);\n    }\n    else {\n        debugNameData = new DebugNameData(nameOrOwner, undefined, undefined);\n    }\n    return new DisposableObservableValue(debugNameData, initialValue, strictEquals);\n}\nexport class DisposableObservableValue extends ObservableValue {\n    _setValue(newValue) {\n        if (this._value === newValue) {\n            return;\n        }\n        if (this._value) {\n            this._value.dispose();\n        }\n        this._value = newValue;\n    }\n    dispose() {\n        this._value?.dispose();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport class DebugNameData {\n    constructor(owner, debugNameSource, referenceFn) {\n        this.owner = owner;\n        this.debugNameSource = debugNameSource;\n        this.referenceFn = referenceFn;\n    }\n    getDebugName(target) {\n        return getDebugName(target, this);\n    }\n}\nconst countPerName = new Map();\nconst cachedDebugName = new WeakMap();\nexport function getDebugName(target, data) {\n    const cached = cachedDebugName.get(target);\n    if (cached) {\n        return cached;\n    }\n    const dbgName = computeDebugName(target, data);\n    if (dbgName) {\n        let count = countPerName.get(dbgName) ?? 0;\n        count++;\n        countPerName.set(dbgName, count);\n        const result = count === 1 ? dbgName : `${dbgName}#${count}`;\n        cachedDebugName.set(target, result);\n        return result;\n    }\n    return undefined;\n}\nfunction computeDebugName(self, data) {\n    const cached = cachedDebugName.get(self);\n    if (cached) {\n        return cached;\n    }\n    const ownerStr = data.owner ? formatOwner(data.owner) + `.` : '';\n    let result;\n    const debugNameSource = data.debugNameSource;\n    if (debugNameSource !== undefined) {\n        if (typeof debugNameSource === 'function') {\n            result = debugNameSource();\n            if (result !== undefined) {\n                return ownerStr + result;\n            }\n        }\n        else {\n            return ownerStr + debugNameSource;\n        }\n    }\n    const referenceFn = data.referenceFn;\n    if (referenceFn !== undefined) {\n        result = getFunctionName(referenceFn);\n        if (result !== undefined) {\n            return ownerStr + result;\n        }\n    }\n    if (data.owner !== undefined) {\n        const key = findKey(data.owner, self);\n        if (key !== undefined) {\n            return ownerStr + key;\n        }\n    }\n    return undefined;\n}\nfunction findKey(obj, value) {\n    for (const key in obj) {\n        if (obj[key] === value) {\n            return key;\n        }\n    }\n    return undefined;\n}\nconst countPerClassName = new Map();\nconst ownerId = new WeakMap();\nfunction formatOwner(owner) {\n    const id = ownerId.get(owner);\n    if (id) {\n        return id;\n    }\n    const className = getClassName(owner);\n    let count = countPerClassName.get(className) ?? 0;\n    count++;\n    countPerClassName.set(className, count);\n    const result = count === 1 ? className : `${className}#${count}`;\n    ownerId.set(owner, result);\n    return result;\n}\nfunction getClassName(obj) {\n    const ctor = obj.constructor;\n    if (ctor) {\n        return ctor.name;\n    }\n    return 'Object';\n}\nexport function getFunctionName(fn) {\n    const fnSrc = fn.toString();\n    // Pattern: /** @description ... */\n    const regexp = /\\/\\*\\*\\s*@description\\s*([^*]*)\\*\\//;\n    const match = regexp.exec(fnSrc);\n    const result = match ? match[1] : undefined;\n    return result?.trim();\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { assertFn } from '../assert.js';\nimport { strictEquals } from '../equals.js';\nimport { DisposableStore } from '../lifecycle.js';\nimport { BaseObservable, _setDerivedOpts } from './base.js';\nimport { DebugNameData } from './debugName.js';\nimport { getLogger } from './logging.js';\nexport function derived(computeFnOrOwner, computeFn) {\n    if (computeFn !== undefined) {\n        return new Derived(new DebugNameData(computeFnOrOwner, undefined, computeFn), computeFn, undefined, undefined, undefined, strictEquals);\n    }\n    return new Derived(new DebugNameData(undefined, undefined, computeFnOrOwner), computeFnOrOwner, undefined, undefined, undefined, strictEquals);\n}\nexport function derivedWithSetter(owner, computeFn, setter) {\n    return new DerivedWithSetter(new DebugNameData(owner, undefined, computeFn), computeFn, undefined, undefined, undefined, strictEquals, setter);\n}\nexport function derivedOpts(options, computeFn) {\n    return new Derived(new DebugNameData(options.owner, options.debugName, options.debugReferenceFn), computeFn, undefined, undefined, options.onLastObserverRemoved, options.equalsFn ?? strictEquals);\n}\n_setDerivedOpts(derivedOpts);\n/**\n * Represents an observable that is derived from other observables.\n * The value is only recomputed when absolutely needed.\n *\n * {@link computeFn} should start with a JS Doc using `@description` to name the derived.\n *\n * Use `createEmptyChangeSummary` to create a \"change summary\" that can collect the changes.\n * Use `handleChange` to add a reported change to the change summary.\n * The compute function is given the last change summary.\n * The change summary is discarded after the compute function was called.\n *\n * @see derived\n */\nexport function derivedHandleChanges(options, computeFn) {\n    return new Derived(new DebugNameData(options.owner, options.debugName, undefined), computeFn, options.createEmptyChangeSummary, options.handleChange, undefined, options.equalityComparer ?? strictEquals);\n}\nexport function derivedWithStore(computeFnOrOwner, computeFnOrUndefined) {\n    let computeFn;\n    let owner;\n    if (computeFnOrUndefined === undefined) {\n        computeFn = computeFnOrOwner;\n        owner = undefined;\n    }\n    else {\n        owner = computeFnOrOwner;\n        computeFn = computeFnOrUndefined;\n    }\n    const store = new DisposableStore();\n    return new Derived(new DebugNameData(owner, undefined, computeFn), r => {\n        store.clear();\n        return computeFn(r, store);\n    }, undefined, undefined, () => store.dispose(), strictEquals);\n}\nexport function derivedDisposable(computeFnOrOwner, computeFnOrUndefined) {\n    let computeFn;\n    let owner;\n    if (computeFnOrUndefined === undefined) {\n        computeFn = computeFnOrOwner;\n        owner = undefined;\n    }\n    else {\n        owner = computeFnOrOwner;\n        computeFn = computeFnOrUndefined;\n    }\n    let store = undefined;\n    return new Derived(new DebugNameData(owner, undefined, computeFn), r => {\n        if (!store) {\n            store = new DisposableStore();\n        }\n        else {\n            store.clear();\n        }\n        const result = computeFn(r);\n        if (result) {\n            store.add(result);\n        }\n        return result;\n    }, undefined, undefined, () => {\n        if (store) {\n            store.dispose();\n            store = undefined;\n        }\n    }, strictEquals);\n}\nexport class Derived extends BaseObservable {\n    get debugName() {\n        return this._debugNameData.getDebugName(this) ?? '(anonymous)';\n    }\n    constructor(_debugNameData, _computeFn, createChangeSummary, _handleChange, _handleLastObserverRemoved = undefined, _equalityComparator) {\n        super();\n        this._debugNameData = _debugNameData;\n        this._computeFn = _computeFn;\n        this.createChangeSummary = createChangeSummary;\n        this._handleChange = _handleChange;\n        this._handleLastObserverRemoved = _handleLastObserverRemoved;\n        this._equalityComparator = _equalityComparator;\n        this.state = 0 /* DerivedState.initial */;\n        this.value = undefined;\n        this.updateCount = 0;\n        this.dependencies = new Set();\n        this.dependenciesToBeRemoved = new Set();\n        this.changeSummary = undefined;\n        this.changeSummary = this.createChangeSummary?.();\n        getLogger()?.handleDerivedCreated(this);\n    }\n    onLastObserverRemoved() {\n        /**\n         * We are not tracking changes anymore, thus we have to assume\n         * that our cache is invalid.\n         */\n        this.state = 0 /* DerivedState.initial */;\n        this.value = undefined;\n        for (const d of this.dependencies) {\n            d.removeObserver(this);\n        }\n        this.dependencies.clear();\n        this._handleLastObserverRemoved?.();\n    }\n    get() {\n        if (this.observers.size === 0) {\n            // Without observers, we don't know when to clean up stuff.\n            // Thus, we don't cache anything to prevent memory leaks.\n            const result = this._computeFn(this, this.createChangeSummary?.());\n            // Clear new dependencies\n            this.onLastObserverRemoved();\n            return result;\n        }\n        else {\n            do {\n                // We might not get a notification for a dependency that changed while it is updating,\n                // thus we also have to ask all our depedencies if they changed in this case.\n                if (this.state === 1 /* DerivedState.dependenciesMightHaveChanged */) {\n                    for (const d of this.dependencies) {\n                        /** might call {@link handleChange} indirectly, which could make us stale */\n                        d.reportChanges();\n                        if (this.state === 2 /* DerivedState.stale */) {\n                            // The other dependencies will refresh on demand, so early break\n                            break;\n                        }\n                    }\n                }\n                // We called report changes of all dependencies.\n                // If we are still not stale, we can assume to be up to date again.\n                if (this.state === 1 /* DerivedState.dependenciesMightHaveChanged */) {\n                    this.state = 3 /* DerivedState.upToDate */;\n                }\n                this._recomputeIfNeeded();\n                // In case recomputation changed one of our dependencies, we need to recompute again.\n            } while (this.state !== 3 /* DerivedState.upToDate */);\n            return this.value;\n        }\n    }\n    _recomputeIfNeeded() {\n        if (this.state === 3 /* DerivedState.upToDate */) {\n            return;\n        }\n        const emptySet = this.dependenciesToBeRemoved;\n        this.dependenciesToBeRemoved = this.dependencies;\n        this.dependencies = emptySet;\n        const hadValue = this.state !== 0 /* DerivedState.initial */;\n        const oldValue = this.value;\n        this.state = 3 /* DerivedState.upToDate */;\n        const changeSummary = this.changeSummary;\n        this.changeSummary = this.createChangeSummary?.();\n        try {\n            /** might call {@link handleChange} indirectly, which could invalidate us */\n            this.value = this._computeFn(this, changeSummary);\n        }\n        finally {\n            // We don't want our observed observables to think that they are (not even temporarily) not being observed.\n            // Thus, we only unsubscribe from observables that are definitely not read anymore.\n            for (const o of this.dependenciesToBeRemoved) {\n                o.removeObserver(this);\n            }\n            this.dependenciesToBeRemoved.clear();\n        }\n        const didChange = hadValue && !(this._equalityComparator(oldValue, this.value));\n        getLogger()?.handleDerivedRecomputed(this, {\n            oldValue,\n            newValue: this.value,\n            change: undefined,\n            didChange,\n            hadValue,\n        });\n        if (didChange) {\n            for (const r of this.observers) {\n                r.handleChange(this, undefined);\n            }\n        }\n    }\n    toString() {\n        return `LazyDerived<${this.debugName}>`;\n    }\n    // IObserver Implementation\n    beginUpdate(_observable) {\n        this.updateCount++;\n        const propagateBeginUpdate = this.updateCount === 1;\n        if (this.state === 3 /* DerivedState.upToDate */) {\n            this.state = 1 /* DerivedState.dependenciesMightHaveChanged */;\n            // If we propagate begin update, that will already signal a possible change.\n            if (!propagateBeginUpdate) {\n                for (const r of this.observers) {\n                    r.handlePossibleChange(this);\n                }\n            }\n        }\n        if (propagateBeginUpdate) {\n            for (const r of this.observers) {\n                r.beginUpdate(this); // This signals a possible change\n            }\n        }\n    }\n    endUpdate(_observable) {\n        this.updateCount--;\n        if (this.updateCount === 0) {\n            // End update could change the observer list.\n            const observers = [...this.observers];\n            for (const r of observers) {\n                r.endUpdate(this);\n            }\n        }\n        assertFn(() => this.updateCount >= 0);\n    }\n    handlePossibleChange(observable) {\n        // In all other states, observers already know that we might have changed.\n        if (this.state === 3 /* DerivedState.upToDate */ && this.dependencies.has(observable) && !this.dependenciesToBeRemoved.has(observable)) {\n            this.state = 1 /* DerivedState.dependenciesMightHaveChanged */;\n            for (const r of this.observers) {\n                r.handlePossibleChange(this);\n            }\n        }\n    }\n    handleChange(observable, change) {\n        if (this.dependencies.has(observable) && !this.dependenciesToBeRemoved.has(observable)) {\n            const shouldReact = this._handleChange ? this._handleChange({\n                changedObservable: observable,\n                change,\n                didChange: (o) => o === observable,\n            }, this.changeSummary) : true;\n            const wasUpToDate = this.state === 3 /* DerivedState.upToDate */;\n            if (shouldReact && (this.state === 1 /* DerivedState.dependenciesMightHaveChanged */ || wasUpToDate)) {\n                this.state = 2 /* DerivedState.stale */;\n                if (wasUpToDate) {\n                    for (const r of this.observers) {\n                        r.handlePossibleChange(this);\n                    }\n                }\n            }\n        }\n    }\n    // IReader Implementation\n    readObservable(observable) {\n        // Subscribe before getting the value to enable caching\n        observable.addObserver(this);\n        /** This might call {@link handleChange} indirectly, which could invalidate us */\n        const value = observable.get();\n        // Which is why we only add the observable to the dependencies now.\n        this.dependencies.add(observable);\n        this.dependenciesToBeRemoved.delete(observable);\n        return value;\n    }\n    addObserver(observer) {\n        const shouldCallBeginUpdate = !this.observers.has(observer) && this.updateCount > 0;\n        super.addObserver(observer);\n        if (shouldCallBeginUpdate) {\n            observer.beginUpdate(this);\n        }\n    }\n    removeObserver(observer) {\n        const shouldCallEndUpdate = this.observers.has(observer) && this.updateCount > 0;\n        super.removeObserver(observer);\n        if (shouldCallEndUpdate) {\n            // Calling end update after removing the observer makes sure endUpdate cannot be called twice here.\n            observer.endUpdate(this);\n        }\n    }\n}\nexport class DerivedWithSetter extends Derived {\n    constructor(debugNameData, computeFn, createChangeSummary, handleChange, handleLastObserverRemoved = undefined, equalityComparator, set) {\n        super(debugNameData, computeFn, createChangeSummary, handleChange, handleLastObserverRemoved, equalityComparator);\n        this.set = set;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nlet globalObservableLogger;\nexport function setLogger(logger) {\n    globalObservableLogger = logger;\n}\nexport function getLogger() {\n    return globalObservableLogger;\n}\nexport class ConsoleObservableLogger {\n    constructor() {\n        this.indentation = 0;\n        this.changedObservablesSets = new WeakMap();\n    }\n    textToConsoleArgs(text) {\n        return consoleTextToArgs([\n            normalText(repeat('|  ', this.indentation)),\n            text,\n        ]);\n    }\n    formatInfo(info) {\n        if (!info.hadValue) {\n            return [\n                normalText(` `),\n                styled(formatValue(info.newValue, 60), {\n                    color: 'green',\n                }),\n                normalText(` (initial)`),\n            ];\n        }\n        return info.didChange\n            ? [\n                normalText(` `),\n                styled(formatValue(info.oldValue, 70), {\n                    color: 'red',\n                    strikeThrough: true,\n                }),\n                normalText(` `),\n                styled(formatValue(info.newValue, 60), {\n                    color: 'green',\n                }),\n            ]\n            : [normalText(` (unchanged)`)];\n    }\n    handleObservableChanged(observable, info) {\n        console.log(...this.textToConsoleArgs([\n            formatKind('observable value changed'),\n            styled(observable.debugName, { color: 'BlueViolet' }),\n            ...this.formatInfo(info),\n        ]));\n    }\n    formatChanges(changes) {\n        if (changes.size === 0) {\n            return undefined;\n        }\n        return styled(' (changed deps: ' +\n            [...changes].map((o) => o.debugName).join(', ') +\n            ')', { color: 'gray' });\n    }\n    handleDerivedCreated(derived) {\n        const existingHandleChange = derived.handleChange;\n        this.changedObservablesSets.set(derived, new Set());\n        derived.handleChange = (observable, change) => {\n            this.changedObservablesSets.get(derived).add(observable);\n            return existingHandleChange.apply(derived, [observable, change]);\n        };\n    }\n    handleDerivedRecomputed(derived, info) {\n        const changedObservables = this.changedObservablesSets.get(derived);\n        console.log(...this.textToConsoleArgs([\n            formatKind('derived recomputed'),\n            styled(derived.debugName, { color: 'BlueViolet' }),\n            ...this.formatInfo(info),\n            this.formatChanges(changedObservables),\n            { data: [{ fn: derived._debugNameData.referenceFn ?? derived._computeFn }] }\n        ]));\n        changedObservables.clear();\n    }\n    handleFromEventObservableTriggered(observable, info) {\n        console.log(...this.textToConsoleArgs([\n            formatKind('observable from event triggered'),\n            styled(observable.debugName, { color: 'BlueViolet' }),\n            ...this.formatInfo(info),\n            { data: [{ fn: observable._getValue }] }\n        ]));\n    }\n    handleAutorunCreated(autorun) {\n        const existingHandleChange = autorun.handleChange;\n        this.changedObservablesSets.set(autorun, new Set());\n        autorun.handleChange = (observable, change) => {\n            this.changedObservablesSets.get(autorun).add(observable);\n            return existingHandleChange.apply(autorun, [observable, change]);\n        };\n    }\n    handleAutorunTriggered(autorun) {\n        const changedObservables = this.changedObservablesSets.get(autorun);\n        console.log(...this.textToConsoleArgs([\n            formatKind('autorun'),\n            styled(autorun.debugName, { color: 'BlueViolet' }),\n            this.formatChanges(changedObservables),\n            { data: [{ fn: autorun._debugNameData.referenceFn ?? autorun._runFn }] }\n        ]));\n        changedObservables.clear();\n        this.indentation++;\n    }\n    handleAutorunFinished(autorun) {\n        this.indentation--;\n    }\n    handleBeginTransaction(transaction) {\n        let transactionName = transaction.getDebugName();\n        if (transactionName === undefined) {\n            transactionName = '';\n        }\n        console.log(...this.textToConsoleArgs([\n            formatKind('transaction'),\n            styled(transactionName, { color: 'BlueViolet' }),\n            { data: [{ fn: transaction._fn }] }\n        ]));\n        this.indentation++;\n    }\n    handleEndTransaction() {\n        this.indentation--;\n    }\n}\nfunction consoleTextToArgs(text) {\n    const styles = new Array();\n    const data = [];\n    let firstArg = '';\n    function process(t) {\n        if ('length' in t) {\n            for (const item of t) {\n                if (item) {\n                    process(item);\n                }\n            }\n        }\n        else if ('text' in t) {\n            firstArg += `%c${t.text}`;\n            styles.push(t.style);\n            if (t.data) {\n                data.push(...t.data);\n            }\n        }\n        else if ('data' in t) {\n            data.push(...t.data);\n        }\n    }\n    process(text);\n    const result = [firstArg, ...styles];\n    result.push(...data);\n    return result;\n}\nfunction normalText(text) {\n    return styled(text, { color: 'black' });\n}\nfunction formatKind(kind) {\n    return styled(padStr(`${kind}: `, 10), { color: 'black', bold: true });\n}\nfunction styled(text, options = {\n    color: 'black',\n}) {\n    function objToCss(styleObj) {\n        return Object.entries(styleObj).reduce((styleString, [propName, propValue]) => {\n            return `${styleString}${propName}:${propValue};`;\n        }, '');\n    }\n    const style = {\n        color: options.color,\n    };\n    if (options.strikeThrough) {\n        style['text-decoration'] = 'line-through';\n    }\n    if (options.bold) {\n        style['font-weight'] = 'bold';\n    }\n    return {\n        text,\n        style: objToCss(style),\n    };\n}\nfunction formatValue(value, availableLen) {\n    switch (typeof value) {\n        case 'number':\n            return '' + value;\n        case 'string':\n            if (value.length + 2 <= availableLen) {\n                return `\"${value}\"`;\n            }\n            return `\"${value.substr(0, availableLen - 7)}\"+...`;\n        case 'boolean':\n            return value ? 'true' : 'false';\n        case 'undefined':\n            return 'undefined';\n        case 'object':\n            if (value === null) {\n                return 'null';\n            }\n            if (Array.isArray(value)) {\n                return formatArray(value, availableLen);\n            }\n            return formatObject(value, availableLen);\n        case 'symbol':\n            return value.toString();\n        case 'function':\n            return `[[Function${value.name ? ' ' + value.name : ''}]]`;\n        default:\n            return '' + value;\n    }\n}\nfunction formatArray(value, availableLen) {\n    let result = '[ ';\n    let first = true;\n    for (const val of value) {\n        if (!first) {\n            result += ', ';\n        }\n        if (result.length - 5 > availableLen) {\n            result += '...';\n            break;\n        }\n        first = false;\n        result += `${formatValue(val, availableLen - result.length)}`;\n    }\n    result += ' ]';\n    return result;\n}\nfunction formatObject(value, availableLen) {\n    let result = '{ ';\n    let first = true;\n    for (const [key, val] of Object.entries(value)) {\n        if (!first) {\n            result += ', ';\n        }\n        if (result.length - 5 > availableLen) {\n            result += '...';\n            break;\n        }\n        first = false;\n        result += `${key}: ${formatValue(val, availableLen - result.length)}`;\n    }\n    result += ' }';\n    return result;\n}\nfunction repeat(str, count) {\n    let result = '';\n    for (let i = 1; i <= count; i++) {\n        result += str;\n    }\n    return result;\n}\nfunction padStr(str, length) {\n    while (str.length < length) {\n        str += ' ';\n    }\n    return str;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Event } from '../event.js';\nimport { DisposableStore, toDisposable } from '../lifecycle.js';\nimport { BaseObservable, ConvenientObservable, _setKeepObserved, _setRecomputeInitiallyAndOnChange, subtransaction, transaction } from './base.js';\nimport { DebugNameData } from './debugName.js';\nimport { derived, derivedOpts } from './derived.js';\nimport { getLogger } from './logging.js';\nimport { strictEquals } from '../equals.js';\n/**\n * Represents an efficient observable whose value never changes.\n */\nexport function constObservable(value) {\n    return new ConstObservable(value);\n}\nclass ConstObservable extends ConvenientObservable {\n    constructor(value) {\n        super();\n        this.value = value;\n    }\n    get debugName() {\n        return this.toString();\n    }\n    get() {\n        return this.value;\n    }\n    addObserver(observer) {\n        // NO OP\n    }\n    removeObserver(observer) {\n        // NO OP\n    }\n    toString() {\n        return `Const: ${this.value}`;\n    }\n}\nexport function observableFromEvent(...args) {\n    let owner;\n    let event;\n    let getValue;\n    if (args.length === 3) {\n        [owner, event, getValue] = args;\n    }\n    else {\n        [event, getValue] = args;\n    }\n    return new FromEventObservable(new DebugNameData(owner, undefined, getValue), event, getValue, () => FromEventObservable.globalTransaction, strictEquals);\n}\nexport function observableFromEventOpts(options, event, getValue) {\n    return new FromEventObservable(new DebugNameData(options.owner, options.debugName, options.debugReferenceFn ?? getValue), event, getValue, () => FromEventObservable.globalTransaction, options.equalsFn ?? strictEquals);\n}\nexport class FromEventObservable extends BaseObservable {\n    constructor(_debugNameData, event, _getValue, _getTransaction, _equalityComparator) {\n        super();\n        this._debugNameData = _debugNameData;\n        this.event = event;\n        this._getValue = _getValue;\n        this._getTransaction = _getTransaction;\n        this._equalityComparator = _equalityComparator;\n        this.hasValue = false;\n        this.handleEvent = (args) => {\n            const newValue = this._getValue(args);\n            const oldValue = this.value;\n            const didChange = !this.hasValue || !(this._equalityComparator(oldValue, newValue));\n            let didRunTransaction = false;\n            if (didChange) {\n                this.value = newValue;\n                if (this.hasValue) {\n                    didRunTransaction = true;\n                    subtransaction(this._getTransaction(), (tx) => {\n                        getLogger()?.handleFromEventObservableTriggered(this, { oldValue, newValue, change: undefined, didChange, hadValue: this.hasValue });\n                        for (const o of this.observers) {\n                            tx.updateObserver(o, this);\n                            o.handleChange(this, undefined);\n                        }\n                    }, () => {\n                        const name = this.getDebugName();\n                        return 'Event fired' + (name ? `: ${name}` : '');\n                    });\n                }\n                this.hasValue = true;\n            }\n            if (!didRunTransaction) {\n                getLogger()?.handleFromEventObservableTriggered(this, { oldValue, newValue, change: undefined, didChange, hadValue: this.hasValue });\n            }\n        };\n    }\n    getDebugName() {\n        return this._debugNameData.getDebugName(this);\n    }\n    get debugName() {\n        const name = this.getDebugName();\n        return 'From Event' + (name ? `: ${name}` : '');\n    }\n    onFirstObserverAdded() {\n        this.subscription = this.event(this.handleEvent);\n    }\n    onLastObserverRemoved() {\n        this.subscription.dispose();\n        this.subscription = undefined;\n        this.hasValue = false;\n        this.value = undefined;\n    }\n    get() {\n        if (this.subscription) {\n            if (!this.hasValue) {\n                this.handleEvent(undefined);\n            }\n            return this.value;\n        }\n        else {\n            // no cache, as there are no subscribers to keep it updated\n            const value = this._getValue(undefined);\n            return value;\n        }\n    }\n}\n(function (observableFromEvent) {\n    observableFromEvent.Observer = FromEventObservable;\n    function batchEventsGlobally(tx, fn) {\n        let didSet = false;\n        if (FromEventObservable.globalTransaction === undefined) {\n            FromEventObservable.globalTransaction = tx;\n            didSet = true;\n        }\n        try {\n            fn();\n        }\n        finally {\n            if (didSet) {\n                FromEventObservable.globalTransaction = undefined;\n            }\n        }\n    }\n    observableFromEvent.batchEventsGlobally = batchEventsGlobally;\n})(observableFromEvent || (observableFromEvent = {}));\nexport function observableSignalFromEvent(debugName, event) {\n    return new FromEventObservableSignal(debugName, event);\n}\nclass FromEventObservableSignal extends BaseObservable {\n    constructor(debugName, event) {\n        super();\n        this.debugName = debugName;\n        this.event = event;\n        this.handleEvent = () => {\n            transaction((tx) => {\n                for (const o of this.observers) {\n                    tx.updateObserver(o, this);\n                    o.handleChange(this, undefined);\n                }\n            }, () => this.debugName);\n        };\n    }\n    onFirstObserverAdded() {\n        this.subscription = this.event(this.handleEvent);\n    }\n    onLastObserverRemoved() {\n        this.subscription.dispose();\n        this.subscription = undefined;\n    }\n    get() {\n        // NO OP\n    }\n}\nexport function observableSignal(debugNameOrOwner) {\n    if (typeof debugNameOrOwner === 'string') {\n        return new ObservableSignal(debugNameOrOwner);\n    }\n    else {\n        return new ObservableSignal(undefined, debugNameOrOwner);\n    }\n}\nclass ObservableSignal extends BaseObservable {\n    get debugName() {\n        return new DebugNameData(this._owner, this._debugName, undefined).getDebugName(this) ?? 'Observable Signal';\n    }\n    toString() {\n        return this.debugName;\n    }\n    constructor(_debugName, _owner) {\n        super();\n        this._debugName = _debugName;\n        this._owner = _owner;\n    }\n    trigger(tx, change) {\n        if (!tx) {\n            transaction(tx => {\n                this.trigger(tx, change);\n            }, () => `Trigger signal ${this.debugName}`);\n            return;\n        }\n        for (const o of this.observers) {\n            tx.updateObserver(o, this);\n            o.handleChange(this, change);\n        }\n    }\n    get() {\n        // NO OP\n    }\n}\n/**\n * This makes sure the observable is being observed and keeps its cache alive.\n */\nexport function keepObserved(observable) {\n    const o = new KeepAliveObserver(false, undefined);\n    observable.addObserver(o);\n    return toDisposable(() => {\n        observable.removeObserver(o);\n    });\n}\n_setKeepObserved(keepObserved);\n/**\n * This converts the given observable into an autorun.\n */\nexport function recomputeInitiallyAndOnChange(observable, handleValue) {\n    const o = new KeepAliveObserver(true, handleValue);\n    observable.addObserver(o);\n    if (handleValue) {\n        handleValue(observable.get());\n    }\n    else {\n        observable.reportChanges();\n    }\n    return toDisposable(() => {\n        observable.removeObserver(o);\n    });\n}\n_setRecomputeInitiallyAndOnChange(recomputeInitiallyAndOnChange);\nexport class KeepAliveObserver {\n    constructor(_forceRecompute, _handleValue) {\n        this._forceRecompute = _forceRecompute;\n        this._handleValue = _handleValue;\n        this._counter = 0;\n    }\n    beginUpdate(observable) {\n        this._counter++;\n    }\n    endUpdate(observable) {\n        this._counter--;\n        if (this._counter === 0 && this._forceRecompute) {\n            if (this._handleValue) {\n                this._handleValue(observable.get());\n            }\n            else {\n                observable.reportChanges();\n            }\n        }\n    }\n    handlePossibleChange(observable) {\n        // NO OP\n    }\n    handleChange(observable, change) {\n        // NO OP\n    }\n}\nexport function derivedObservableWithCache(owner, computeFn) {\n    let lastValue = undefined;\n    const observable = derivedOpts({ owner, debugReferenceFn: computeFn }, reader => {\n        lastValue = computeFn(reader, lastValue);\n        return lastValue;\n    });\n    return observable;\n}\nexport function derivedObservableWithWritableCache(owner, computeFn) {\n    let lastValue = undefined;\n    const onChange = observableSignal('derivedObservableWithWritableCache');\n    const observable = derived(owner, reader => {\n        onChange.read(reader);\n        lastValue = computeFn(reader, lastValue);\n        return lastValue;\n    });\n    return Object.assign(observable, {\n        clearCache: (tx) => {\n            lastValue = undefined;\n            onChange.trigger(tx);\n        },\n        setCache: (newValue, tx) => {\n            lastValue = newValue;\n            onChange.trigger(tx);\n        }\n    });\n}\n/**\n * When the items array changes, referential equal items are not mapped again.\n */\nexport function mapObservableArrayCached(owner, items, map, keySelector) {\n    let m = new ArrayMap(map, keySelector);\n    const self = derivedOpts({\n        debugReferenceFn: map,\n        owner,\n        onLastObserverRemoved: () => {\n            m.dispose();\n            m = new ArrayMap(map);\n        }\n    }, (reader) => {\n        m.setItems(items.read(reader));\n        return m.getItems();\n    });\n    return self;\n}\nclass ArrayMap {\n    constructor(_map, _keySelector) {\n        this._map = _map;\n        this._keySelector = _keySelector;\n        this._cache = new Map();\n        this._items = [];\n    }\n    dispose() {\n        this._cache.forEach(entry => entry.store.dispose());\n        this._cache.clear();\n    }\n    setItems(items) {\n        const newItems = [];\n        const itemsToRemove = new Set(this._cache.keys());\n        for (const item of items) {\n            const key = this._keySelector ? this._keySelector(item) : item;\n            let entry = this._cache.get(key);\n            if (!entry) {\n                const store = new DisposableStore();\n                const out = this._map(item, store);\n                entry = { out, store };\n                this._cache.set(key, entry);\n            }\n            else {\n                itemsToRemove.delete(key);\n            }\n            newItems.push(entry.out);\n        }\n        for (const item of itemsToRemove) {\n            const entry = this._cache.get(item);\n            entry.store.dispose();\n            this._cache.delete(item);\n        }\n        this._items = newItems;\n    }\n    getItems() {\n        return this._items;\n    }\n}\nexport class ValueWithChangeEventFromObservable {\n    constructor(observable) {\n        this.observable = observable;\n    }\n    get onDidChange() {\n        return Event.fromObservableLight(this.observable);\n    }\n    get value() {\n        return this.observable.get();\n    }\n}\nexport function observableFromValueWithChangeEvent(owner, value) {\n    if (value instanceof ValueWithChangeEventFromObservable) {\n        return value.observable;\n    }\n    return observableFromEvent(owner, value.onDidChange, () => value.value);\n}\n/**\n * Works like a derived.\n * However, if the value is not undefined, it is cached and will not be recomputed anymore.\n * In that case, the derived will unsubscribe from its dependencies.\n*/\nexport function derivedConstOnceDefined(owner, fn) {\n    return derivedObservableWithCache(owner, (reader, lastValue) => lastValue ?? fn(reader));\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Emitter, Event } from '../../../base/common/event.js';\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport { LanguagesRegistry } from './languagesRegistry.js';\nimport { firstOrDefault } from '../../../base/common/arrays.js';\nimport { TokenizationRegistry } from '../languages.js';\nimport { PLAINTEXT_LANGUAGE_ID } from '../languages/modesRegistry.js';\nimport { observableFromEvent } from '../../../base/common/observable.js';\nexport class LanguageService extends Disposable {\n    static { this.instanceCount = 0; }\n    constructor(warnOnOverwrite = false) {\n        super();\n        this._onDidRequestBasicLanguageFeatures = this._register(new Emitter());\n        this.onDidRequestBasicLanguageFeatures = this._onDidRequestBasicLanguageFeatures.event;\n        this._onDidRequestRichLanguageFeatures = this._register(new Emitter());\n        this.onDidRequestRichLanguageFeatures = this._onDidRequestRichLanguageFeatures.event;\n        this._onDidChange = this._register(new Emitter({ leakWarningThreshold: 200 /* https://github.com/microsoft/vscode/issues/119968 */ }));\n        this.onDidChange = this._onDidChange.event;\n        this._requestedBasicLanguages = new Set();\n        this._requestedRichLanguages = new Set();\n        LanguageService.instanceCount++;\n        this._registry = this._register(new LanguagesRegistry(true, warnOnOverwrite));\n        this.languageIdCodec = this._registry.languageIdCodec;\n        this._register(this._registry.onDidChange(() => this._onDidChange.fire()));\n    }\n    dispose() {\n        LanguageService.instanceCount--;\n        super.dispose();\n    }\n    isRegisteredLanguageId(languageId) {\n        return this._registry.isRegisteredLanguageId(languageId);\n    }\n    getLanguageIdByLanguageName(languageName) {\n        return this._registry.getLanguageIdByLanguageName(languageName);\n    }\n    getLanguageIdByMimeType(mimeType) {\n        return this._registry.getLanguageIdByMimeType(mimeType);\n    }\n    guessLanguageIdByFilepathOrFirstLine(resource, firstLine) {\n        const languageIds = this._registry.guessLanguageIdByFilepathOrFirstLine(resource, firstLine);\n        return firstOrDefault(languageIds, null);\n    }\n    createById(languageId) {\n        return new LanguageSelection(this.onDidChange, () => {\n            return this._createAndGetLanguageIdentifier(languageId);\n        });\n    }\n    createByFilepathOrFirstLine(resource, firstLine) {\n        return new LanguageSelection(this.onDidChange, () => {\n            const languageId = this.guessLanguageIdByFilepathOrFirstLine(resource, firstLine);\n            return this._createAndGetLanguageIdentifier(languageId);\n        });\n    }\n    _createAndGetLanguageIdentifier(languageId) {\n        if (!languageId || !this.isRegisteredLanguageId(languageId)) {\n            // Fall back to plain text if language is unknown\n            languageId = PLAINTEXT_LANGUAGE_ID;\n        }\n        return languageId;\n    }\n    requestBasicLanguageFeatures(languageId) {\n        if (!this._requestedBasicLanguages.has(languageId)) {\n            this._requestedBasicLanguages.add(languageId);\n            this._onDidRequestBasicLanguageFeatures.fire(languageId);\n        }\n    }\n    requestRichLanguageFeatures(languageId) {\n        if (!this._requestedRichLanguages.has(languageId)) {\n            this._requestedRichLanguages.add(languageId);\n            // Ensure basic features are requested\n            this.requestBasicLanguageFeatures(languageId);\n            // Ensure tokenizers are created\n            TokenizationRegistry.getOrCreate(languageId);\n            this._onDidRequestRichLanguageFeatures.fire(languageId);\n        }\n    }\n}\nclass LanguageSelection {\n    constructor(onDidChangeLanguages, selector) {\n        this._value = observableFromEvent(this, onDidChangeLanguages, () => selector());\n        this.onDidChange = Event.fromObservable(this._value);\n    }\n    get languageId() {\n        return this._value.get();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { parse } from '../../../base/common/glob.js';\nimport { Mimes } from '../../../base/common/mime.js';\nimport { Schemas } from '../../../base/common/network.js';\nimport { basename, posix } from '../../../base/common/path.js';\nimport { DataUri } from '../../../base/common/resources.js';\nimport { startsWithUTF8BOM } from '../../../base/common/strings.js';\nimport { PLAINTEXT_LANGUAGE_ID } from '../languages/modesRegistry.js';\nlet registeredAssociations = [];\nlet nonUserRegisteredAssociations = [];\nlet userRegisteredAssociations = [];\n/**\n * Associate a language to the registry (platform).\n * * **NOTE**: This association will lose over associations registered using `registerConfiguredLanguageAssociation`.\n * * **NOTE**: Use `clearPlatformLanguageAssociations` to remove all associations registered using this function.\n */\nexport function registerPlatformLanguageAssociation(association, warnOnOverwrite = false) {\n    _registerLanguageAssociation(association, false, warnOnOverwrite);\n}\nfunction _registerLanguageAssociation(association, userConfigured, warnOnOverwrite) {\n    // Register\n    const associationItem = toLanguageAssociationItem(association, userConfigured);\n    registeredAssociations.push(associationItem);\n    if (!associationItem.userConfigured) {\n        nonUserRegisteredAssociations.push(associationItem);\n    }\n    else {\n        userRegisteredAssociations.push(associationItem);\n    }\n    // Check for conflicts unless this is a user configured association\n    if (warnOnOverwrite && !associationItem.userConfigured) {\n        registeredAssociations.forEach(a => {\n            if (a.mime === associationItem.mime || a.userConfigured) {\n                return; // same mime or userConfigured is ok\n            }\n            if (associationItem.extension && a.extension === associationItem.extension) {\n                console.warn(`Overwriting extension <<${associationItem.extension}>> to now point to mime <<${associationItem.mime}>>`);\n            }\n            if (associationItem.filename && a.filename === associationItem.filename) {\n                console.warn(`Overwriting filename <<${associationItem.filename}>> to now point to mime <<${associationItem.mime}>>`);\n            }\n            if (associationItem.filepattern && a.filepattern === associationItem.filepattern) {\n                console.warn(`Overwriting filepattern <<${associationItem.filepattern}>> to now point to mime <<${associationItem.mime}>>`);\n            }\n            if (associationItem.firstline && a.firstline === associationItem.firstline) {\n                console.warn(`Overwriting firstline <<${associationItem.firstline}>> to now point to mime <<${associationItem.mime}>>`);\n            }\n        });\n    }\n}\nfunction toLanguageAssociationItem(association, userConfigured) {\n    return {\n        id: association.id,\n        mime: association.mime,\n        filename: association.filename,\n        extension: association.extension,\n        filepattern: association.filepattern,\n        firstline: association.firstline,\n        userConfigured: userConfigured,\n        filenameLowercase: association.filename ? association.filename.toLowerCase() : undefined,\n        extensionLowercase: association.extension ? association.extension.toLowerCase() : undefined,\n        filepatternLowercase: association.filepattern ? parse(association.filepattern.toLowerCase()) : undefined,\n        filepatternOnPath: association.filepattern ? association.filepattern.indexOf(posix.sep) >= 0 : false\n    };\n}\n/**\n * Clear language associations from the registry (platform).\n */\nexport function clearPlatformLanguageAssociations() {\n    registeredAssociations = registeredAssociations.filter(a => a.userConfigured);\n    nonUserRegisteredAssociations = [];\n}\n/**\n * @see `getMimeTypes`\n */\nexport function getLanguageIds(resource, firstLine) {\n    return getAssociations(resource, firstLine).map(item => item.id);\n}\nfunction getAssociations(resource, firstLine) {\n    let path;\n    if (resource) {\n        switch (resource.scheme) {\n            case Schemas.file:\n                path = resource.fsPath;\n                break;\n            case Schemas.data: {\n                const metadata = DataUri.parseMetaData(resource);\n                path = metadata.get(DataUri.META_DATA_LABEL);\n                break;\n            }\n            case Schemas.vscodeNotebookCell:\n                // File path not relevant for language detection of cell\n                path = undefined;\n                break;\n            default:\n                path = resource.path;\n        }\n    }\n    if (!path) {\n        return [{ id: 'unknown', mime: Mimes.unknown }];\n    }\n    path = path.toLowerCase();\n    const filename = basename(path);\n    // 1.) User configured mappings have highest priority\n    const configuredLanguage = getAssociationByPath(path, filename, userRegisteredAssociations);\n    if (configuredLanguage) {\n        return [configuredLanguage, { id: PLAINTEXT_LANGUAGE_ID, mime: Mimes.text }];\n    }\n    // 2.) Registered mappings have middle priority\n    const registeredLanguage = getAssociationByPath(path, filename, nonUserRegisteredAssociations);\n    if (registeredLanguage) {\n        return [registeredLanguage, { id: PLAINTEXT_LANGUAGE_ID, mime: Mimes.text }];\n    }\n    // 3.) Firstline has lowest priority\n    if (firstLine) {\n        const firstlineLanguage = getAssociationByFirstline(firstLine);\n        if (firstlineLanguage) {\n            return [firstlineLanguage, { id: PLAINTEXT_LANGUAGE_ID, mime: Mimes.text }];\n        }\n    }\n    return [{ id: 'unknown', mime: Mimes.unknown }];\n}\nfunction getAssociationByPath(path, filename, associations) {\n    let filenameMatch = undefined;\n    let patternMatch = undefined;\n    let extensionMatch = undefined;\n    // We want to prioritize associations based on the order they are registered so that the last registered\n    // association wins over all other. This is for https://github.com/microsoft/vscode/issues/20074\n    for (let i = associations.length - 1; i >= 0; i--) {\n        const association = associations[i];\n        // First exact name match\n        if (filename === association.filenameLowercase) {\n            filenameMatch = association;\n            break; // take it!\n        }\n        // Longest pattern match\n        if (association.filepattern) {\n            if (!patternMatch || association.filepattern.length > patternMatch.filepattern.length) {\n                const target = association.filepatternOnPath ? path : filename; // match on full path if pattern contains path separator\n                if (association.filepatternLowercase?.(target)) {\n                    patternMatch = association;\n                }\n            }\n        }\n        // Longest extension match\n        if (association.extension) {\n            if (!extensionMatch || association.extension.length > extensionMatch.extension.length) {\n                if (filename.endsWith(association.extensionLowercase)) {\n                    extensionMatch = association;\n                }\n            }\n        }\n    }\n    // 1.) Exact name match has second highest priority\n    if (filenameMatch) {\n        return filenameMatch;\n    }\n    // 2.) Match on pattern\n    if (patternMatch) {\n        return patternMatch;\n    }\n    // 3.) Match on extension comes next\n    if (extensionMatch) {\n        return extensionMatch;\n    }\n    return undefined;\n}\nfunction getAssociationByFirstline(firstLine) {\n    if (startsWithUTF8BOM(firstLine)) {\n        firstLine = firstLine.substr(1);\n    }\n    if (firstLine.length > 0) {\n        // We want to prioritize associations based on the order they are registered so that the last registered\n        // association wins over all other. This is for https://github.com/microsoft/vscode/issues/20074\n        for (let i = registeredAssociations.length - 1; i >= 0; i--) {\n            const association = registeredAssociations[i];\n            if (!association.firstline) {\n                continue;\n            }\n            const matches = firstLine.match(association.firstline);\n            if (matches && matches.length > 0) {\n                return association;\n            }\n        }\n    }\n    return undefined;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Emitter } from '../../../base/common/event.js';\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport { regExpLeadsToEndlessLoop } from '../../../base/common/strings.js';\nimport { clearPlatformLanguageAssociations, getLanguageIds, registerPlatformLanguageAssociation } from './languagesAssociations.js';\nimport { ModesRegistry, PLAINTEXT_LANGUAGE_ID } from '../languages/modesRegistry.js';\nimport { Extensions } from '../../../platform/configuration/common/configurationRegistry.js';\nimport { Registry } from '../../../platform/registry/common/platform.js';\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\nconst NULL_LANGUAGE_ID = 'vs.editor.nullLanguage';\nexport class LanguageIdCodec {\n    constructor() {\n        this._languageIdToLanguage = [];\n        this._languageToLanguageId = new Map();\n        this._register(NULL_LANGUAGE_ID, 0 /* LanguageId.Null */);\n        this._register(PLAINTEXT_LANGUAGE_ID, 1 /* LanguageId.PlainText */);\n        this._nextLanguageId = 2;\n    }\n    _register(language, languageId) {\n        this._languageIdToLanguage[languageId] = language;\n        this._languageToLanguageId.set(language, languageId);\n    }\n    register(language) {\n        if (this._languageToLanguageId.has(language)) {\n            return;\n        }\n        const languageId = this._nextLanguageId++;\n        this._register(language, languageId);\n    }\n    encodeLanguageId(languageId) {\n        return this._languageToLanguageId.get(languageId) || 0 /* LanguageId.Null */;\n    }\n    decodeLanguageId(languageId) {\n        return this._languageIdToLanguage[languageId] || NULL_LANGUAGE_ID;\n    }\n}\nexport class LanguagesRegistry extends Disposable {\n    static { this.instanceCount = 0; }\n    constructor(useModesRegistry = true, warnOnOverwrite = false) {\n        super();\n        this._onDidChange = this._register(new Emitter());\n        this.onDidChange = this._onDidChange.event;\n        LanguagesRegistry.instanceCount++;\n        this._warnOnOverwrite = warnOnOverwrite;\n        this.languageIdCodec = new LanguageIdCodec();\n        this._dynamicLanguages = [];\n        this._languages = {};\n        this._mimeTypesMap = {};\n        this._nameMap = {};\n        this._lowercaseNameMap = {};\n        if (useModesRegistry) {\n            this._initializeFromRegistry();\n            this._register(ModesRegistry.onDidChangeLanguages((m) => {\n                this._initializeFromRegistry();\n            }));\n        }\n    }\n    dispose() {\n        LanguagesRegistry.instanceCount--;\n        super.dispose();\n    }\n    _initializeFromRegistry() {\n        this._languages = {};\n        this._mimeTypesMap = {};\n        this._nameMap = {};\n        this._lowercaseNameMap = {};\n        clearPlatformLanguageAssociations();\n        const desc = [].concat(ModesRegistry.getLanguages()).concat(this._dynamicLanguages);\n        this._registerLanguages(desc);\n    }\n    _registerLanguages(desc) {\n        for (const d of desc) {\n            this._registerLanguage(d);\n        }\n        // Rebuild fast path maps\n        this._mimeTypesMap = {};\n        this._nameMap = {};\n        this._lowercaseNameMap = {};\n        Object.keys(this._languages).forEach((langId) => {\n            const language = this._languages[langId];\n            if (language.name) {\n                this._nameMap[language.name] = language.identifier;\n            }\n            language.aliases.forEach((alias) => {\n                this._lowercaseNameMap[alias.toLowerCase()] = language.identifier;\n            });\n            language.mimetypes.forEach((mimetype) => {\n                this._mimeTypesMap[mimetype] = language.identifier;\n            });\n        });\n        Registry.as(Extensions.Configuration).registerOverrideIdentifiers(this.getRegisteredLanguageIds());\n        this._onDidChange.fire();\n    }\n    _registerLanguage(lang) {\n        const langId = lang.id;\n        let resolvedLanguage;\n        if (hasOwnProperty.call(this._languages, langId)) {\n            resolvedLanguage = this._languages[langId];\n        }\n        else {\n            this.languageIdCodec.register(langId);\n            resolvedLanguage = {\n                identifier: langId,\n                name: null,\n                mimetypes: [],\n                aliases: [],\n                extensions: [],\n                filenames: [],\n                configurationFiles: [],\n                icons: []\n            };\n            this._languages[langId] = resolvedLanguage;\n        }\n        this._mergeLanguage(resolvedLanguage, lang);\n    }\n    _mergeLanguage(resolvedLanguage, lang) {\n        const langId = lang.id;\n        let primaryMime = null;\n        if (Array.isArray(lang.mimetypes) && lang.mimetypes.length > 0) {\n            resolvedLanguage.mimetypes.push(...lang.mimetypes);\n            primaryMime = lang.mimetypes[0];\n        }\n        if (!primaryMime) {\n            primaryMime = `text/x-${langId}`;\n            resolvedLanguage.mimetypes.push(primaryMime);\n        }\n        if (Array.isArray(lang.extensions)) {\n            if (lang.configuration) {\n                // insert first as this appears to be the 'primary' language definition\n                resolvedLanguage.extensions = lang.extensions.concat(resolvedLanguage.extensions);\n            }\n            else {\n                resolvedLanguage.extensions = resolvedLanguage.extensions.concat(lang.extensions);\n            }\n            for (const extension of lang.extensions) {\n                registerPlatformLanguageAssociation({ id: langId, mime: primaryMime, extension: extension }, this._warnOnOverwrite);\n            }\n        }\n        if (Array.isArray(lang.filenames)) {\n            for (const filename of lang.filenames) {\n                registerPlatformLanguageAssociation({ id: langId, mime: primaryMime, filename: filename }, this._warnOnOverwrite);\n                resolvedLanguage.filenames.push(filename);\n            }\n        }\n        if (Array.isArray(lang.filenamePatterns)) {\n            for (const filenamePattern of lang.filenamePatterns) {\n                registerPlatformLanguageAssociation({ id: langId, mime: primaryMime, filepattern: filenamePattern }, this._warnOnOverwrite);\n            }\n        }\n        if (typeof lang.firstLine === 'string' && lang.firstLine.length > 0) {\n            let firstLineRegexStr = lang.firstLine;\n            if (firstLineRegexStr.charAt(0) !== '^') {\n                firstLineRegexStr = '^' + firstLineRegexStr;\n            }\n            try {\n                const firstLineRegex = new RegExp(firstLineRegexStr);\n                if (!regExpLeadsToEndlessLoop(firstLineRegex)) {\n                    registerPlatformLanguageAssociation({ id: langId, mime: primaryMime, firstline: firstLineRegex }, this._warnOnOverwrite);\n                }\n            }\n            catch (err) {\n                // Most likely, the regex was bad\n                console.warn(`[${lang.id}]: Invalid regular expression \\`${firstLineRegexStr}\\`: `, err);\n            }\n        }\n        resolvedLanguage.aliases.push(langId);\n        let langAliases = null;\n        if (typeof lang.aliases !== 'undefined' && Array.isArray(lang.aliases)) {\n            if (lang.aliases.length === 0) {\n                // signal that this language should not get a name\n                langAliases = [null];\n            }\n            else {\n                langAliases = lang.aliases;\n            }\n        }\n        if (langAliases !== null) {\n            for (const langAlias of langAliases) {\n                if (!langAlias || langAlias.length === 0) {\n                    continue;\n                }\n                resolvedLanguage.aliases.push(langAlias);\n            }\n        }\n        const containsAliases = (langAliases !== null && langAliases.length > 0);\n        if (containsAliases && langAliases[0] === null) {\n            // signal that this language should not get a name\n        }\n        else {\n            const bestName = (containsAliases ? langAliases[0] : null) || langId;\n            if (containsAliases || !resolvedLanguage.name) {\n                resolvedLanguage.name = bestName;\n            }\n        }\n        if (lang.configuration) {\n            resolvedLanguage.configurationFiles.push(lang.configuration);\n        }\n        if (lang.icon) {\n            resolvedLanguage.icons.push(lang.icon);\n        }\n    }\n    isRegisteredLanguageId(languageId) {\n        if (!languageId) {\n            return false;\n        }\n        return hasOwnProperty.call(this._languages, languageId);\n    }\n    getRegisteredLanguageIds() {\n        return Object.keys(this._languages);\n    }\n    getLanguageIdByLanguageName(languageName) {\n        const languageNameLower = languageName.toLowerCase();\n        if (!hasOwnProperty.call(this._lowercaseNameMap, languageNameLower)) {\n            return null;\n        }\n        return this._lowercaseNameMap[languageNameLower];\n    }\n    getLanguageIdByMimeType(mimeType) {\n        if (!mimeType) {\n            return null;\n        }\n        if (hasOwnProperty.call(this._mimeTypesMap, mimeType)) {\n            return this._mimeTypesMap[mimeType];\n        }\n        return null;\n    }\n    guessLanguageIdByFilepathOrFirstLine(resource, firstLine) {\n        if (!resource && !firstLine) {\n            return [];\n        }\n        return getLanguageIds(resource, firstLine);\n    }\n}\n"],"names":["Array","i","Object","Set","e","WeakMap","s","a","t","Promise","d","arguments","o","Map","console","r","c","RegExp"],"mappings":"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"}